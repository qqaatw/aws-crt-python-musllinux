# This workflow is inspired by: https://github.com/pypa/python-manylinux-demo
name: Build

on:
  schedule:
    - cron:  '0 0 * * *'
  workflow_dispatch:
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      latest: ${{ steps.check.outputs.LATEST }}
    steps:
      - name: Setup Python
        uses: actions/setup-python@v3
      - name: Check new versions
        id: check
        run: |
          pip install requests
          echo "$(python check_and_update.py --task check)" >> $GITHUB_OUTPUT
      - name: Write summary
        run: |
          echo "Is the version latest: ${{steps.check.outputs.LATEST}}" >> $GITHUB_STEP_SUMMARY
          echo "Upstream version: ${{steps.check.outputs.UPSTREAM}}" >> $GITHUB_STEP_SUMMARY
          echo "Main version: ${{steps.check.outputs.MAIN}}" >> $GITHUB_STEP_SUMMARY
  build:
    needs: check
    if: ${{ needs.check.outputs.latest == false || github.event_name == 'workflow_dispatch' }} 
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - qemu: false
            cibw_archs: auto
            cibw_build: cp*-musllinux_*
            cibw_skip: cp36-* pp* *-win_arm64
          - qemu: true
            cibw_archs: aarch64
            cibw_build: cp*-musllinux_*
            cibw_skip: cp36-* pp* *-win_arm64
    steps:
      - name: Set up QEMU
        if: ${{matrix.qemu == true}}
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v3
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.11.2
      - name: Build wheels
        run: |
          uname -m
          ls -al
          sh build_wheels.sh
          ls wheelhouse/
        env:
          CIBW_ARCHS: ${{matrix.cibw_archs}}
          CIBW_BUILD: ${{matrix.cibw_build}}
          CIBW_SKIP: ${{matrix.cibw_skip}}
          CIBW_TEST_COMMAND: python -m unittest discover --failfast --verbose

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: wheelhouse
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts
          path: artifacts
      - name: Retrieve version
        run: |
          echo "TAG_NAME=$(files=(artifacts/*);IFS='-' read -r -a array <<< $files;echo ${array[1]})" >> $GITHUB_OUTPUT # get package version
        id: version
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          files: artifacts/*
          tag_name: ${{ steps.version.outputs.TAG_NAME }}
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Update index.html
        run: |
          pip install requests
          python check_and_update.py --task update
      - name: Commit and push index.html
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update index.html
          file_pattern: index.html